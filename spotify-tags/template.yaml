AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: spotify-tags


Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: python3.12

Resources:
  Database:
    Type: AWS::Serverless::SimpleTable
    Properties:
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: spotify-tags
  HelloWorldFunction:
    Type: AWS::Serverless::Function     # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: .
      Handler: aws_lambda.app.lambda_handler
      Description: Hello World function
      Architectures:
      - x86_64
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Database
       # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
      Environment:
        Variables:
          TABLE_NAME: !Ref Database
          POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: DEBUG
          SPOTIPY_CLIENT_ID: 'd6bceb71037a463ab86296f14967086f'
          SPOTIPY_CLIENT_SECRET: 'a45b87357a8b45888274448e481428fb'
          SPOTIPY_REDIRECT_URI: 'http://localhost:3000'
      Tags:
        LambdaPowertools: python

  PrototypeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: Spotify tags API
      StageName: default
      OpenApiVersion: '3.0.0'
      EndpointConfiguration:
        Type: EDGE
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: oas.yaml

  # grant permission to API gateway to invoke lambda function
  LambdaInvokerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt HelloWorldFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PrototypeApi}/*/*/*"

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn

  ApiGatewayUrl:
    Description: API Gateway public URL
    Value: !Sub "https://${PrototypeApi}.execute-api.${AWS::Region}.amazonaws.com/default/"

